
@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Drop Down List Selection Query");

    var artistarg = Request.Form["artistArg"];

    var cid = Request.QueryString["cid"];

    var db = Database.Open("CHINOOK");
string sqlcommand1 = "SELECT ArtistId, Name FROM Artists WHERE Name LIKE @0 ORDER BY Name";
        var partialstring = "%" + artistarg + "%";
        var results = db.Query(sqlcommand1, partialstring);
}


@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    //obtain my data from the form
    var choice = Request.Form["ArtistList"];
    //check for a selection
    if (choice.Equals("0"))
    {
        <p style="color:firebrick">Select an artist to view:</p>
    }
    else
    {
        var albumquery = @"SELECT AlbumID
    FROM Albums
    WHERE ArtistId = @0";
        var albuminfo = db.Query(albumquery, choice);
        //      check to see if there are products for category
        if (albuminfo.Count() == 0)
        {
            <p style="color:firebrick">There are no albums for the selected artist.</p>
        }
        else
        {
            //yes products:
            //pass ddl value (CategoryID) to next page
            // to go to another page use Response.Redirect(pagename) (GET method)
            // to pass data along with the page
            // add a ? after the name
            // add for each parameter a coded pair of    label = value
            // separate data pairs with an  &
            // sample syntax    Response.Redirect(page.ext?lbl=value[&lbl=value ...])
            //WARNING: value are passed in plain text on Url
            Response.Redirect("Exercise02_C.cshtml?cid=" + choice);
        }
    }
}
else
{
    //on page initialization (1st time)
    //testing for an empty collection uses the .Count() method
    //the .Query() command will give you a collection of 0, 1 or more records
    if (results.Count() == 0)
    {
        <p style="color:firebrick">There are no artist on file.</p>
    }
}

<form id="theform" method="post">
    <div class="offset-3">
        <label id="lblArtistList" for="ArtistList">Select product Artist to view:</label>
        &nbsp;&nbsp;
        <select id="ArtistList" name="ArtistList">
            <option value="0">select ....</option>
            @foreach (var item in results)
            {
                //walk through the record collection of Category records
                //for each record in the collection you will create an option line
                //the display text will be the CategoryName
                //the value attribute will use the CategoryID (FKey on Products)
                //reminder of data access on a record
                // a) index   syntax item[index]
                // b) property name  syntax item.PropertyName (column title on the SQL select)
                <option value="@item.ArtistId">@item.Name</option>
            }
        </select>
        &nbsp;&nbsp;
        <button type="submit" id="theButton" name="theButton" value="submit"
                class="btn btn-primary">
            View Artist Albums ...
        </button>
    </div>
</form>