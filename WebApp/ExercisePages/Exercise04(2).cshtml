@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "CRUD - Update/Delete");

    var pid = Request.QueryString["pid"];
    if (pid.IsEmpty())
    {
        Response.Redirect("Exercise04(1).cshtml");
    }
    var AlbumId = Request.Form["AlbumId"];
    var Title = Request.Form["Title"];
    var ArtistId = Request.Form["ArtistId"];
    var ReleaseYear = Request.Form["ReleaseYear"];
    var ReleaseLabel = Request.Form["ReleaseLabel"];
    var thebutton = Request.Form["theButton"];
    var message="";


    //these are validator controls execute on the server side

    Validation.Add("Title",
         Validator.Required("Title is required"),
         Validator.StringLength(160, 1, "Product name is limited to 160 characters"));

    Validation.Add("ArtistId",
         Validator.Range(1, 9999999, "Artist is required"));

    Validation.Add("ReleaseYear",
        Validator.Integer("ReleaseYear must be a number."),
        Validator.Range(1950, DateTime.Today.Year, "ReleaseYear is between 1950 and " + DateTime.Today.Year));

    Validation.Add("ReleaseLabel",
       Validator.StringLength(50, 1, "ReleaseLabel is limited to 160 characters"));



    if (IsPost)
    {

        AlbumId = pid;
    }
    var db = Database.Open("CHINOOK");
    var artistquery = "SELECT ArtistId, Name "
            + "FROM Artists "
            + "Order by Name";
    var queryartist = db.Query(artistquery);
    var queryStatement = "SELECT AlbumId , Title , "
                        + " ArtistId , ReleaseYear , ReleaseLabel "
                        + "FROM Albums "
                        + "WHERE AlbumId = @0";
    var queryAlbums = db.QuerySingle(queryStatement, pid);
    if (queryAlbums == null)
    {
        Response.Redirect("Exercise04(1).cshtml");
    }
}

@section head{
    @*<link href="~/Content/MyCssCopy.css" rel="stylesheet" />*@
}

@section banner{
    <h1>@Page.Title</h1>
}
@if (IsPost)
{

    if (thebutton.Equals("backtosearch"))
    {
        Response.Redirect("Exercise04(1).cshtml");
    }
    if (Validation.IsValid())
    {



        try
        {
            if (thebutton.Equals("update"))
            {
                var sqlcommand = "UPDATE Albums SET "
                            + "Title = @0, "
                            + "ArtistId = @1, "
                            + "ReleaseYear = @2, "
                            + "ReleaseLabel = @3 "
                            + "WHERE AlbumId = @4";
                var rowsaffected = db.Execute(sqlcommand, Title,
                ArtistId.Equals("0") ? null : ArtistId,
                ReleaseYear.Equals("0") ? null : ReleaseYear,
                string.IsNullOrEmpty(ReleaseLabel) ? null : ReleaseLabel,
                 AlbumId);
                if (rowsaffected > 0)
                {
                    message = "Album has been UPDATED";
                }
                else
                {
                    message = "Album NOT found";
                }
            }
            else if (thebutton.Equals("delete"))
            {
                var deletestatement1 = "DELETE Tracks WHERE AlbumId = @0";

                var row1 = db.Execute(deletestatement1, AlbumId);

                var deleteStatement = "Delete Albums WHERE AlbumId = @0";


                var rows = db.Execute(deleteStatement, AlbumId);
                if (rows == 1 && row1 >=0)
                {
                    message = "Album has been DELETED";
                }
                else
                {
                    message = "Album NOT found";
                }
                AlbumId = "";
                Title = "";
                ArtistId = "0";
                ReleaseYear = "0";
                ReleaseLabel = "";

            }

        }
        catch (Exception ex)
        {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
        }


    }
}
else //IsPost=false
{
    AlbumId = queryAlbums.AlbumId.ToString();
    Title = queryAlbums.Title;
    ArtistId = queryAlbums.ArtistId == null ? "0" : queryAlbums.ArtistId.ToString();
    ReleaseYear = queryAlbums.ReleaseYear == null ? "0" : queryAlbums.ReleaseYear.ToString();
    ReleaseLabel = queryAlbums.ReleaseLabel == null ? null : queryAlbums.ReleaseLabel.ToString();
}
@Html.ValidationSummary()
<div class="col-12 text-center">
    <p style="color:green">
        @message
    </p>
</div>
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        <div class="col text-right">
            <label id="lblAlbumId" for="AlbumId">AlbumId</label>
        </div>
        <div class="col text-left">
            <input type="text" name="AlbumId" value="@AlbumId" readonly />
        </div><br />
        <div class="col text-right">
            <label id="lblTitle" for="Title">Title</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@Title" />
        </div><br />
        <div class="col text-right">
            <label id="lblArtistId" for="ArtistId">Artist</label>
        </div>
        <div class="col text-left">
            <select name="ArtistId">
                <option value="0">select...</option>
                @foreach (var acollectionrow in queryartist)
                {
                    if (acollectionrow.ArtistId.ToString() == ArtistId)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />
        <div class="col text-right">
            <label id="ReleaseYear" for="ReleaseYear">ReleaseYear</label>
        </div>
        <div class="col text-left">
            <input type="number" name="ReleaseYear" value="@ReleaseYear" step="1" /><br />
        </div><br />
        <div class="col text-right">
            <label id="lblReleaseLabel" for="ReleaseLabel">ReleaseLabel</label>
        </div>
        <div class="col text-left">
            <input type="text" name="QuantityPerUnit" value="@ReleaseLabel" />
        </div><br />
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-primary"
                    value="update">
                Update
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-primary" formnovalidate
                    value="delete">
                Delete Record
            </button>&nbsp;&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theCancel" class="btn btn-primary" formnovalidate
                    value="backtosearch">
                Back to Search
            </button>
        </div>
    </div>
    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the discontinuing of a product*@
    <script type="text/javascript">
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to DELETE @Title?");
        }
    </script>
</form>
